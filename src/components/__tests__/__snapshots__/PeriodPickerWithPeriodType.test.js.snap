// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test <PeriodPickerWithPeriodType /> rendering: It should render a <PeriodTypeDropDown/> and <PeriodPicker/> when selectedPeriodType is truthy 1`] = `
<div>
  <span
    style={
      Object {
        "color": "#757575",
        "display": "block",
        "fontSize": "14px",
        "marginBottom": 5,
        "textAlign": "left",
      }
    }
  >
    This is my label
  </span>
  <PeriodTypeDropDown
    loadingError=""
    menuItems={
      Array [
        Object {
          "displayName": "Yes",
          "id": "1",
        },
        Object {
          "displayName": "No",
          "id": "2",
        },
      ]
    }
    onChange={[Function]}
    ready={true}
    value="Quarterly"
  />
  <PeriodPicker
    onPickPeriod={[Function]}
    periodType="Quarterly"
  />
</div>
`;

exports[`Test <PeriodPickerWithPeriodType /> rendering: It should render a <PeriodTypeDropDown/> when selectedPeriodType is falsy 1`] = `
<div>
  <span
    style={
      Object {
        "color": "#757575",
        "display": "block",
        "fontSize": "14px",
        "marginBottom": 5,
        "textAlign": "left",
      }
    }
  >
    This is my label
  </span>
  <PeriodTypeDropDown
    loadingError=""
    menuItems={
      Array [
        Object {
          "displayName": "Yes",
          "id": "1",
        },
        Object {
          "displayName": "No",
          "id": "2",
        },
      ]
    }
    onChange={[Function]}
    ready={true}
    value=""
  />
</div>
`;

exports[`Test <PeriodPickerWithPeriodType /> rendering: It should render the parsed period when a period has been selected 1`] = `
<div>
  <span
    style={
      Object {
        "color": "#757575",
        "display": "block",
        "fontSize": "14px",
        "marginBottom": 5,
        "textAlign": "left",
      }
    }
  >
    This is my label
  </span>
  <PeriodTypeDropDown
    loadingError=""
    menuItems={
      Array [
        Object {
          "displayName": "Yes",
          "id": "1",
        },
        Object {
          "displayName": "No",
          "id": "2",
        },
      ]
    }
    onChange={[Function]}
    ready={true}
    value="Daily"
  />
  <PeriodPicker
    onPickPeriod={[Function]}
    periodType="Daily"
  />
  <div
    style={
      Object {
        "marginBottom": "16px",
      }
    }
  >
    January 1, 2018
  </div>
</div>
`;
