// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Feedback /> can render a default snackbar message 1`] = `
<span
  id="feedbackSnackbarId"
>
  <FeedbackSnackbar
    conf={
      Object {
        "action": undefined,
        "message": "Message body",
        "onActionClick": undefined,
        "type": "",
      }
    }
    onClose={[Function]}
    show={true}
  />
</span>
`;

exports[`<Feedback /> can render a success snackbar message 1`] = `
<span
  id="feedbackSnackbarId"
>
  <FeedbackSnackbar
    conf={
      Object {
        "action": undefined,
        "message": "Message body",
        "onActionClick": undefined,
        "type": "SUCCESS",
      }
    }
    onClose={[Function]}
    show={true}
  />
</span>
`;

exports[`<Feedback /> can render a warning snackbar message 1`] = `
<span
  id="feedbackSnackbarId"
>
  <FeedbackSnackbar
    conf={
      Object {
        "action": undefined,
        "message": "Message body",
        "onActionClick": undefined,
        "type": "WARNING",
      }
    }
    onClose={[Function]}
    show={true}
  />
</span>
`;

exports[`<Feedback /> can render an error snackbar message 1`] = `
<span
  id="feedbackSnackbarId"
>
  <FeedbackSnackbar
    conf={
      Object {
        "action": undefined,
        "message": "Message body",
        "onActionClick": undefined,
        "type": "ERROR",
      }
    }
    onClose={[Function]}
    show={true}
  />
</span>
`;

exports[`<Feedback /> should render a loader when showLoader is true 1`] = `
<div
  style={
    Object {
      "left": "50%",
      "position": "fixed",
      "top": "50%",
      "transform": "translate(-50%, -50%)",
      "zIndex": 3000,
    }
  }
>
  <CircularProgress />
</div>
`;
